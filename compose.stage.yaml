services:

  proxy:
    image: caddy:2.9.1-alpine
    container_name: proxy
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./stage.Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
      - frontend-stage-dist:/srv  # <-- Mount the build output here
    networks:
      - app-network
      
  client:
    build: 
      context: ./Frontend
      dockerfile: Dockerfile.stage
    env_file:
      - ./env/client.dev.env
    volumes:
      - frontend-stage-dist:/export/build  # <-- Mount the build output here
    # restart: always
    command: [ "true" ]  # This container is just for building â€” it exits after the build is done
    networks:
      - app-network

  server:
    build: 
      context: ./Backend
      dockerfile: Dockerfile.stage
    volumes: []
    env_file:
      - ./env/server.dev.env
    restart: always
    networks:
      - app-network


  mongo:
    image: mongo:latest
    volumes:
      - mongo-stage-data:/data/db
    env_file:
      - ./env/server.dev.env
    restart: always
    ports:
      - "27017:27017"
    networks:
      - app-network

volumes:
  caddy_data:
  caddy_config:
  mongo-stage-data:
  frontend-stage-dist:

networks:
  app-network:
    driver: bridge

