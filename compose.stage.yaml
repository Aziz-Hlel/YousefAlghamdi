# secrets:
#   MONGO_INITDB_ROOT_USERNAME:
#     file: ./secrets/MONGO_INITDB_ROOT_USERNAME
#   MONGO_INITDB_ROOT_PASSWORD:
#     file: ./secrets/MONGO_INITDB_ROOT_PASSWORD

services:

  proxy:
    container_name: proxy-stage
    build:
      context: ./Frontend
      dockerfile: Dockerfile.stage
      args:
        - VITE_API_URL=${STAGE___VITE_API_URL}
        - VITE_API_NODE_ENV=${STAGE___VITE_API_NODE_ENV}
    
    ports:
      - 8443:8443
    volumes:
      - ./stage.Caddyfile:/etc/caddy/Caddyfile
      - caddy-stage-data:/data
      - caddy-stage-config:/config
    # restart: always
    networks:
      - app-network

  server:
    container_name: server-stage
    build:
      context: ./Backend
      dockerfile: Dockerfile.stage
    environment:
        - PORT=${STAGE___PORT}
        - JWT_ACCESS_SECRET=${STAGE___JWT_ACCESS_SECRET}
        - JWT_REFRESH_SECRET=${STAGE___JWT_REFRESH_SECRET}
        - ENVIOREMENT=${STAGE___ENVIOREMENT}
        - NODE_ENV=${STAGE___NODE_ENV}
        - FRONT_URL=${STAGE___FRONT_URL}
        - MONGO_INITDB_ROOT_USERNAME=${STAGE___MONGO_INITDB_ROOT_USERNAME}
        - MONGO_INITDB_ROOT_PASSWORD=${STAGE___MONGO_INITDB_ROOT_PASSWORD}
        - MONGO_INITDB_DATABASE=${STAGE___MONGO_INITDB_DATABASE}

    restart: always
    networks:
      - app-network

  mongo:
    container_name: mongo-stage
    image: mongo:latest
    volumes:
      - mongo-stage-data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${STAGE___MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${STAGE___MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${STAGE___MONGO_INITDB_DATABASE}
    restart: always
    ports:
      - 27017:27017
    networks:
      - app-network

volumes:
  caddy-stage-data:
  caddy-stage-config:
  mongo-stage-data:
  # frontend-stage-dist:


networks:
  app-network:
    driver: bridge
