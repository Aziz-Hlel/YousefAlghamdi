services:

  # proxy:
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
  #     - ./certbot/conf:/etc/letsencrypt
  #     - ./certbot/www:/var/www/certbot
  #   restart: always

  proxy:
    image: caddy:2.9.1-alpine
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
      - frontend-dist:/srv  # <-- Mount the build output here

      
  client:
    build: 
      context: ./Frontend
      dockerfile: Dockerfile.prod
    env_file:
      - ./env/client.prod.env
    volumes:
      - frontend-dist:/export/build  # <-- Mount the build output here
    # restart: always
    command: [ "true" ]  # This container is just for building â€” it exits after the build is done

  server:
    build: 
      context: ./Backend
      dockerfile: Dockerfile.prod
    volumes: []
    env_file:
      - ./env/server.prod.env
    restart: always

  mongo:
    env_file:
      - ./env/server.prod.env
    restart: always

  # #############################
  # # CERT
  # #############################
  # certbot:
  #   image: certbot/certbot
  #   container_name: certbot
  #   volumes:
  #     - ./certbot/conf:/etc/letsencrypt
  #     - ./certbot/www:/var/www/certbot
  #   command: certonly --webroot -w /var/www/certbot --force-renewal --email tigana137@gmail.com -d ygp.ae --agree-tos
  #   environment:
  #     - CERTBOT_EMAIL=tigana137@gmail.com
  #     - CERTBOT_DOMAIN=ygp.ae
  #   restart: always

volumes:
  caddy_data:
  caddy_config:
  mongo-data:
  frontend-dist:
