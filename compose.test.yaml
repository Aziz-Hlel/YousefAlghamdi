services:

  proxy:
    image: caddy:2.9.1-alpine
    container_name: proxy
    ports:
      - 8443:8443
      # - 443:443
    volumes:
      - ./stage.Caddyfile:/etc/caddy/Caddyfile
      - caddy-stage-data:/data
      - caddy-stage-config:/config
      - frontend-stage-dist:/srv # <-- Mount the build output here
    networks:
      - app-network

  client:
    build:
      context: ./Frontend
      dockerfile: Dockerfile.stage
    env_file:
      - ./env/client.dev.env
    volumes:
      - frontend-stage-dist:/app/dist # <-- Mount the build output here
    # restart: always
    command: [ "tail", "-f", "/dev/null" ]
    networks:
      - app-network

  server:
    build:
      context: ./Backend
      dockerfile: Dockerfile.stage
    volumes: []
    # ports:
    #   - 5000:5000
    env_file:
      - ./env/server.dev.env
    restart: always
    networks:
      - app-network

  mongo:
    image: mongo:latest
    volumes:
      - mongo-stage-data:/data/db
    env_file:
      - ./env/server.dev.env
    restart: always
    ports:
      - "27017:27017"
    networks:
      - app-network

volumes:
  caddy-stage-data:
  caddy-stage-config:
  mongo-stage-data:
  frontend-stage-dist:


networks:
  app-network:
    driver: bridge
