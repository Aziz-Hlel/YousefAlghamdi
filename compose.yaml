# secrets:
#   MONGO_INITDB_ROOT_USERNAME:
#     file: ./secrets/MONGO_INITDB_ROOT_USERNAME
#   MONGO_INITDB_ROOT_PASSWORD:
#     file: ./secrets/MONGO_INITDB_ROOT_PASSWORD

services:

  proxy:

    container_name: proxy

    build:
      context: ./Frontend
      args:
        - VITE_API_URL=${PROD___VITE_API_URL}
        - VITE_API_NODE_ENV=${PROD___VITE_API_NODE_ENV}

    ports:
      - 443:443
      - 80:80

    restart: always

    healthcheck:
      test: [ "CMD", "curl", "-fk", "https://127.0.0.1:443/health" ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy-prod-data:/data
      - caddy-prod-config:/config

    networks:
      - app-network

  server:

    container_name: server

    build:
      context: ./Backend

    environment:
      - PORT=${PROD___PORT}
      - JWT_ACCESS_SECRET=${PROD___JWT_ACCESS_SECRET}
      - JWT_REFRESH_SECRET=${PROD___JWT_REFRESH_SECRET}
      - ENVIOREMENT=${PROD___ENVIOREMENT}
      - NODE_ENV=${PROD___NODE_ENV}
      - FRONT_URL=${PROD___FRONT_URL}
      - MONGO_INITDB_ROOT_USERNAME=${PROD___MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${PROD___MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${PROD___MONGO_INITDB_DATABASE}
      - BUCKET_NAME=${PROD___BUCKET_NAME}
      - BUCKET_REGION=${PROD___BUCKET_REGION}
      - BUCKET_ACCESS_KEY=${PROD___BUCKET_ACCESS_KEY}
      - BUCKET_SECRET_ACCESS_KEY=${PROD___BUCKET_SECRET_ACCESS_KEY}
      - CDN_DOMAIN=${PROD___CDN_DOMAIN}
      - CDN_PUBLIC_KEY_ID=${PROD___CDN_PUBLIC_KEY_ID}
      - CDN_PRIVATE_KEY=${PROD___CDN_PRIVATE_KEY}
      - EMAIL_HOST=${PROD___EMAIL_HOST}
      - EMAIL_PORT=${PROD___EMAIL_PORT}
      - EMAIL_SECURE=${PROD___EMAIL_SECURE}
      - EMAIL_USER=${PROD___EMAIL_USER}
      - EMAIL_PASS=${PROD___EMAIL_PASS}

    healthcheck:
      test: [ "CMD", "curl", "-f", "http://server-stage:${STAGE___PORT}/health" ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

    restart: always

    depends_on:
      - mongo

    networks:
      - app-network

  mongo:

    container_name: mongo

    image: mongo:latest

    volumes:
      - mongo-prod-data:/data/db
      - ./mongo_backups:/backup
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${PROD___MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${PROD___MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${PROD___MONGO_INITDB_DATABASE}

    command: mongod --logpath /dev/null # For no logs at all

    ports:
      - 27017:27017

    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

    restart: always

    networks:
      - app-network

volumes:
  caddy-prod-data:
  caddy-prod-config:
  mongo-prod-data:


networks:
  app-network:
    driver: bridge
